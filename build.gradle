plugins {
    id 'com.github.johnrengelman.shadow' version '8.1.1'
    id 'java'
    id "net.kyori.blossom" version "1.3.1"
    id 'io.freefair.lombok' version '8.7.1'
}

group = 'eu.xap3y'
version = '1.0'

// OPTIONAL
/*blossom {
    replaceToken("@VERSION@", version)
    replaceToken("@MAIN@", mainClass)
}*/

repositories {
    mavenCentral()
    maven {
        name = "papermc-repo"
        url = "https://repo.papermc.io/repository/maven-public/"
    }
    maven {
        name = "sonatype"
        url = "https://oss.sonatype.org/content/groups/public/"
    }
    maven { url "https://jitpack.io" }
    maven {
        url = 'https://repo.extendedclip.com/content/repositories/placeholderapi/'
    }
}

dependencies {
    compileOnly "io.papermc.paper:paper-api:1.20.4-R0.1-SNAPSHOT"
    testCompileOnly "io.papermc.paper:paper-api:1.20.4-R0.1-SNAPSHOT"
}

def targetJavaVersion = 17
java {
    withJavadocJar()
    withSourcesJar()
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'

    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release.set(targetJavaVersion)
    }
}

tasks.register('testJar', Jar) {
    from sourceSets.main.output.classesDirs
    from sourceSets.test.output.classesDirs
    from('src/test/resources') {
        include '**'
    }

    archiveBaseName.set("XaBasisTest")
}

javadoc {
    if (JavaVersion.current().isJava9Compatible()) {
        options.addBooleanOption('html5', true)
    }

    source = sourceSets.main.java.sourceDirectories
    classpath += configurations.compileClasspath

    options.memberLevel = JavadocMemberLevel.PRIVATE
}